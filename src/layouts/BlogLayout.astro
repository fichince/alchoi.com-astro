---
import MD from '@src/components/MD.astro';
import Paginator from '@src/components/Paginator.astro';
import TagChooser from '@src/components/TagChooser.astro';
import NavbarLayout from '@src/layouts/NavbarLayout.astro';
import TagList from '@src/components/TagList.astro';
import About from '@src/components/About.astro';
import type { Props as LayoutProps } from '@src/layouts/Layout.astro';

import type { Page } from 'astro';

import { Picture } from '@astrojs/image/components';
import { getLinkToPost, shortDate } from '@src/utils';
//import Wave from '@src/components/icons/Wave.astro';

interface Props extends LayoutProps {
  page: Page<BlogEntry>,
  tag?: string;
}

const { page, tag, meta } = Astro.props;
const posts = page.data;

---
<NavbarLayout title="Blog" meta={meta}>
  <div class="container tw-container fade-in">
    <header>
      <h1>Blog</h1>
      <TagChooser selectedTag={tag} />
      <div class="divider" />
    </header>
    <main>
      {posts.map(async (post, index) => {

        const date = shortDate(post.data.date);
        const end = post.data.end ? shortDate(post.data.end) : null;
        
        const tags = post.data.tags ?? [];
        const link = getLinkToPost(post);

        const { Content } = await post.render();

        const even = index % 2 === 0;

        return (
          <article class="post card wave" 
            class:list={{ left: !even, right: even }}>
            <div class="title">
              <div class="tags">
                <TagList tags={tags} />
              </div>
              <h3>
                <a href={link}>
                  <MD md={post.data.title} />
                </a>
              </h3>
              { post.data.author &&
              <h4 class="author">
                {post.data.author}
              </h4>
              }
              <div class="dates">
                <time>{date}</time>
                {end && 
                  <span> - <time>{end}</time></span> 
                }
              </div>
              { post.data.rating && 
                <sl-rating value={post.data.rating} readonly precision="0.5" />
              }
              { post.data.description &&
              <div class="description">
                <h4>
                  <MD md={post.data.description} />
                </h4>
              </div>
              }
            </div>
            { post.data.image &&
              <div class="image image-hover">
                <a href={link}>
                  <Picture
                    src={post.data.image}
                    alt={post.data.title}
                    widths={[140, 280]}
                    aspectRatio="1:1"
                    sizes="(min-width: 480px) 280px, 140px"
                  />
                </a>
              </div>
            }
            { post.collection === 'capsules' &&
            <div class="tw-prose quick-review">
              <Content />
            </div>
            }
          </article>
        );
      })}
    </main>
    <footer>
      <Paginator page={page} />
    </footer>

  </div>
  <section>
    <About />
  </section>
</NavbarLayout>

<script>
  import createObserver from '../scripts/intersection';

  const items = document.getElementsByClassName('post');
  const observer = createObserver();

  for (let i = 0; i < items.length; i++) {
    const elem = items.item(i);
    if (elem) observer.observe(elem);
  }
</script>

<style lang="scss">
  @import "../style/mixins.scss";

  .container {
    margin-left: auto;
    margin-right: auto;

    font-family: var(--font-display);
    padding: var(--size-fluid-3);

    display: grid;
    grid-template-areas:
      "header"
      "main"
      "footer";
    grid-template-columns: auto;
    @include sm-up {
      grid-template-areas:
        "main main header"
        "footer footer .";
      grid-template-columns: 1fr 1fr 1fr;
    }

    header {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-bottom: var(--size-fluid-3);
      grid-area: header;

      h1 {
        font-size: var(--font-size-fluid-3);
      }

      .divider {
        height: 2px;
        width: 50%;
        border-radius: 100%;
        background-color: var(--colour-foreground);
        margin-top: var(--size-fluid-1);
      }

      @include sm-up {
        h1 {
          display: none;
        }
        .divider {
          display: none;
        }
      }
    }

    main {
      grid-area: main;
    }

    article {
      &:not(:first-child) {
        margin-top: var(--size-fluid-3);
      }

      display: grid;

      &:nth-child(odd) {
        --text-alignment: left;
        --columns: 1fr auto;

        grid-template-areas:
          "title image"
          "words words";

        --title-align: flex-start;
      }
      &:nth-child(even) {
        --text-alignment: right;
        --columns: auto 1fr;

        grid-template-areas:
          "image title"
          "words words";

        --title-align: flex-end;
      }

      padding: var(--size-fluid-2);

      align-items: baseline;
      --rows: 1fr;
      
      gap: var(--size-fluid-1);
      grid-template-rows: var(--rows);
      grid-template-columns: var(--columns);

      text-align: var(--text-alignment);

      .title {
        grid-area: title;

        display: flex;
        flex-direction: column;
        align-items: var(--title-align);

        h3 {
          font-size: var(--font-size-fluid-2);
          text-decoration: underline;
        }

        h4.author {
          font-size: var(--font-size-fluid-0);
          margin-bottom: var(--font-size-fluid-1);
        }

        time {
          font-size: var(--font-size-fluid-1);
        }
        .description {
          display: none;

          @include sm-up {
            display: block;
            text-align: var(--text-alignment);
            max-width: var(--size-15);

            h4 {
              font-size: var(--font-size-fluid-0);
              font-family: var(--font-body);
            }
          }
        }

        .tags {
          display: none;
          @include sm-up {
            display: block;
          }
        }
      }

      .image {
        grid-area: image;
        place-self: center;
      }

      a {
        @include hover-link($subtle: true);
      }

      transition: 
        opacity 500ms var(--ease-out-1), 
        transform 500ms var(--ease-out-1),
        box-shadow 500ms var(--ease-out-1);

      &.show {
        opacity: 100%;
        transform: none;
      }

      &.hide {
        opacity: 0%;
      }

      &:nth-child(odd) {
        &.hide {
          transform: translateX(-50px);
        }
      }
      &:nth-child(even) {
        &.hide {
          transform: translateX(50px);
        }
      }

      sl-rating {
        margin: var(--size-fluid-2) 0;
      }

      .quick-review {
        grid-area: words;

        font-family: var(--font-body);
        margin: var(--size-fluid-1) auto;
        text-align: left;
        max-width: initial;
      }
    }

    footer {
      grid-area: footer;
      width: 100%;
      margin: 0 auto;
      display: flex;
      justify-content: center;
    }
  }

</style>