---
import MD from '@src/components/MD.astro';
import Paginator from '@src/components/Paginator.astro';
import TagChooser from '@src/components/TagChooser.astro';
import NavbarLayout from '@src/layouts/NavbarLayout.astro';
import TagList from '@src/components/TagList.astro';
import About from '@src/components/About.astro';
import { Image } from 'astro:assets';
import type { Props as LayoutProps } from '@src/layouts/Layout.astro';

import type { Page } from 'astro';

import { getLinkToPost, shortDate } from '@src/utils';
import { renderWithExcerpt } from '@src/markdown';

interface Props extends LayoutProps {
  page: Page<BlogEntry>,
  tag?: string;
}

const { page, tag, meta, title } = Astro.props;
const posts = page.data;

function renderPost(post: BlogEntry) : { html: string, hasExcerpt: boolean } {
  const { content, excerpt } = renderWithExcerpt(post.body);

  let html = "";

  if (excerpt) {
    // if there's an excerpt, show it
    html = excerpt;
  } else {
    // if there's no excerpt, only show the full post for "quick reviews"
    if (post.collection === 'capsules') {
      html = content;
    }
  }

  return { html, hasExcerpt: Boolean(excerpt) };
}

---
<NavbarLayout title={title ?? 'Blog'} meta={meta}>
  <div class="container tw-container fade-in">
    <header>
      <h1>Blog</h1>
      <TagChooser selectedTag={tag} />
      <div class="divider" />
    </header>
    <main>
      {posts.map(async (post, index) => {

        const date = shortDate(post.data.date);
        const end = post.data.end ? shortDate(post.data.end) : null;

        const tags = post.data.tags ?? [];
        const link = getLinkToPost(post);

        const { html, hasExcerpt } = renderPost(post);

        const even = index % 2 === 0;

        return (
          <article class="post card">
            <div class="title">
              <div class="tags">
                <TagList tags={tags} justify={ even ? 'left' : 'right' } />
              </div>
              <h3>
                <a href={link}>
                  <MD md={post.data.title} />
                </a>
              </h3>
              { post.data.author &&
              <h4 class="author">
                {post.data.author}
              </h4>
              }
              <div class="dates">
                <time>{date}</time>
                {end &&
                  <span> - <time>{end}</time></span>
                }
              </div>
              { post.data.rating &&
                <sl-rating value={post.data.rating} readonly precision="0.5" />
              }
              { post.data.description &&
              <div class="description">
                <h4>
                  <MD md={post.data.description} />
                </h4>
              </div>
              }
            </div>
            { post.data.image &&
              <div class="image image-hover image-round">
                <a href={link}>
                  <Image
                    src={post.data.image}
                    alt={post.data.title}
                    width={280}
                  />
                </a>
              </div>
            }
            <div class="tw-prose quick-review">
              <Fragment set:html={html} />
              { hasExcerpt &&
                <a href={link}>Read more&hellip;</a>
              }
            </div>
          </article>
        );
      })}
    </main>
    <footer>
      <Paginator page={page} />
    </footer>

  </div>
  <section>
    <About />
  </section>
</NavbarLayout>

<script>
  import createObserver from '../scripts/intersection';

  const items = document.getElementsByClassName('post');
  const observer = createObserver();

  for (let i = 0; i < items.length; i++) {
    const elem = items.item(i);
    if (elem) observer.observe(elem);
  }
</script>

<style lang="scss">
  @import "../style/mixins.scss";

  .container {
    margin-left: auto;
    margin-right: auto;

    font-family: var(--font-display);
    padding: var(--size-fluid-3);

    display: grid;
    grid-template-areas:
      "header"
      "main"
      "footer";
    grid-template-columns: auto;
    @include sm-up {
      grid-template-areas:
        "main main header"
        "footer footer .";
      grid-template-columns: 1fr 1fr 1fr;
    }

    header {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-bottom: var(--size-fluid-3);
      grid-area: header;

      h1 {
        font-size: var(--font-size-fluid-3);
      }

      .divider {
        height: 2px;
        width: 50%;
        border-radius: 100%;
        background-color: var(--colour-foreground);
        margin-top: var(--size-fluid-1);
      }

      @include sm-up {
        h1 {
          display: none;
        }
        .divider {
          display: none;
        }
      }
    }

    main {
      grid-area: main;
    }

    article {
      // leave space for the protruding circular image
      &:has(div.image) {
        &:not(:first-child) {
          margin-top: var(--size-fluid-6);
        }
        &:first-child {
          margin-top: var(--size-fluid-5);
        }
      }

      // no need for space above if there's no image
      &:not(:has(div.image)) {
        &:not(:first-child) {
          margin-top: var(--size-fluid-4);
        }
      }

      display: grid;
      overflow: visible;

      grid-template-areas:
        "image"
        "title"
        "words";

      &:nth-child(odd) {
        --text-alignment: left;
        --title-align: flex-start;
        --title-margin: 0 var(--size-fluid-2) 0 0;
      }
      &:nth-child(even) {
        --text-alignment: right;
        --title-align: flex-end;
        --title-margin: 0 0 0 var(--size-fluid-2);
      }

      @include sm-up {

        &:nth-child(odd) {
          --columns: 1fr auto;

          grid-template-areas:
            "title image"
            "words words";

        }
        &:nth-child(even) {
          --columns: auto 1fr;

          grid-template-areas:
            "image title"
            "words words";

        }
      }

      .image {
        grid-area: image;
        place-self: center;

        position: relative;
        display: inline-block;
        top: calc(-1 * var(--size-9));

        img {
          width: 200px;
          @include sm-up {
            width: 320px;
          }
        }
      }

      padding: var(--size-fluid-2);

      align-items: baseline;
      --rows: 1fr;

      //gap: var(--size-fluid-1);
      grid-template-rows: var(--rows);
      grid-template-columns: var(--columns);

      text-align: var(--text-alignment);

      .title {

        &:not(:has(+ div.image)) {
          margin-bottom: var(--size-fluid-2);
        }
        grid-area: title;

        display: flex;
        flex-direction: column;
        align-items: var(--title-align);

        h3 {
          font-size: var(--font-size-fluid-2);
          text-decoration: underline;
          margin: var(--title-margin);
        }

        h4.author {
          font-size: var(--font-size-fluid-0);
          margin-bottom: var(--font-size-fluid-1);
        }

        .dates {
          font-size: var(--font-size-fluid-1);
        }
        .description {
          display: none;

          @include sm-up {
            display: block;
            text-align: var(--text-alignment);
            max-width: var(--size-15);

            h4 {
              font-size: var(--font-size-fluid-0);
              font-family: var(--font-body);
            }
          }
        }

        .tags {
          display: none;
          @include sm-up {
            display: block;
          }
        }
      }


      a {
        @include hover-link($subtle: true);
      }

      transition:
        opacity 500ms var(--ease-out-1),
        transform 500ms var(--ease-out-1),
        box-shadow 500ms var(--ease-out-1),
        background-color 500ms var(--ease-out-1);

      &.show {
        opacity: 100%;
        transform: none;
      }

      &.hide {
        opacity: 0%;
      }

      &:nth-child(odd) {
        &.hide {
          transform: translateX(-20px);
        }
      }
      &:nth-child(even) {
        &.hide {
          transform: translateX(20px);
        }
      }

      sl-rating {
        margin: var(--size-fluid-2) 0;
      }

      .quick-review {
        grid-area: words;

        font-family: var(--font-body);
        text-align: left;
        max-width: initial;
      }
    }

    footer {
      grid-area: footer;
      width: 100%;
      margin: 0 auto;
      display: flex;
      justify-content: center;
    }
  }

</style>
