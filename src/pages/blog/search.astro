---
import NavbarLayout from '@src/layouts/NavbarLayout.astro';
import CoolBackground from '@src/components/CoolBackground.astro';
---
<NavbarLayout title="Search">
  <div class="container tw-container">
    <div class="search">
      <input id="q" name="q" class="form-input" type="text" placeholder="Search..." 
        hx-trigger="keyup changed delay:500ms, init-query"
        hx-target="#results"
        hx-post="/blog/search-results"
        hx-indicator=".indicator"
        x-data="searchQuery"
        x-on:keyup="updateQueryString"
      />

      <sl-spinner id="spinner" class="indicator">
      </sl-spinner>

      <div class="results indicator" id="results">
      </div>
    </div>

  </div>
  <CoolBackground />
</NavbarLayout>

<style lang="scss">
  @import "../../style/mixins.scss";

  .container {
    margin-left: auto;
    margin-right: auto;
    padding: var(--size-fluid-2) 0;

    .search {
      display: flex;
      flex-direction: column;
      align-items: center;

      input {
        width: var(--size-fluid-10);
        margin-bottom: var(--size-fluid-2);
        font-size: var(--font-size-fluid-2);
      }

      sl-spinner {

        opacity: 0;
        font-size: 0;
        --track-width: 5px;
        --track-color: var(--colour-foreground);
        --indicator-color: var(--colour-accent);
        --speed: 2.5s;

        transition: opacity 500ms ease-in-out;

        &.htmx-request {
          font-size: var(--font-size-fluid-5);
          opacity: 1;
        }
      }

      .results {

        &.htmx-request {
          opacity: 0;
        }

        font-family: var(--font-body);
        padding: 0 var(--size-fluid-1);
        width: var(--size-fluid-10);

        // must be global because the results are rendered
        // on the server at request time, and it doesn't have
        // the identifiers for scoped styles
        :global(.result) {
          margin: var(--size-fluid-2) 0;
          padding-bottom: var(--size-fluid-2);

          opacity: 0;
          animation: fade-in 400ms ease-in-out;
          animation-fill-mode: forwards;
          @for $i from 1 through 20 {
            &:nth-child(#{$i}) {
              animation-delay: calc(75ms * #{$i});
            }
          }

          &:not(.not-found) {
            border-bottom: 1px solid var(--colour-accent);
          }

          :global(a) {
            text-decoration: underline;
            @include hover-link($subtle: true);
          }

          :global(.title) {
            font-family: var(--font-display);
            font-size: var(--font-size-3);
            margin-bottom: var(--size-fluid-1);
          }

          :global(.body) {
            list-style-type: disc;
            list-style-position: inside;
            font-size: var(--font-size-2);
          }

          :global(mark) {
            background: inherit;
            font-weight: 700;
            font-style: italic;
            color: var(--colour-accent);
          }
        }
      }
    }
  }
</style>
