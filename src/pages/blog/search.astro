---
import NavbarLayout from '@src/layouts/NavbarLayout.astro';
import CoolBackground from '@src/components/CoolBackground.astro';
import SearchResults from '@src/components/search/SearchResults.astro';
---
<NavbarLayout title="Search">
  <div class="container tw-container">
    <div class="search">

      <form x-data="searchQuery" x-ref="formRef"
        hx-trigger="init-query, submit"
        hx-target="#results"
        hx-post="/blog/search-results"
        hx-indicator=".indicator"
      >
        <input id="q" name="q" class="form-input" type="text" placeholder="Search..."
          x-model="q"
          {/*x-on:keyup.debounce.500ms="$refs.formRef.submit()"*/}
        />

        {/* TODO don't use shoelace here... it's interfering with how Alpine works
        what I need is a styling only component library */}

        <div class="toggles">
          <sl-checkbox name="includeBlog"
            x-model="includeBlog">
            Include blog posts
          </sl-checkbox>
          <sl-checkbox name="includeQuotes"
            x-model="includeQuotes">
            Include quoteshelf
          </sl-checkbox>
        </div>

        <sl-button type="submit" x-on:click="updateQueryString()">Search</sl-button>
      </form>

      <sl-spinner id="spinner" class="indicator">
      </sl-spinner>

      <div class="results indicator" id="results">
        {/* This is a trick to get the scoped styles in the SearchResults component
        to render into the stylesheet. It doesn't get generated otherwise because it's a partial
        that's not prerendered.
        */}
        <SearchResults results={[]} q="" />
      </div>
    </div>

  </div>
  <CoolBackground />

</NavbarLayout>

<style lang="scss">
  @import "../../style/mixins.scss";

  .container {
    margin-left: auto;
    margin-right: auto;
    padding: var(--size-fluid-2) 0;

    .search {
      display: flex;
      flex-direction: column;
      align-items: center;

      form {
        display: flex;
        gap: var(--size-3);
        align-items: center;
        margin-bottom: var(--size-fluid-2);

        input {
          width: var(--size-fluid-10);
          font-family: var(--font-body);
        }

        .toggles {
          display: flex;
          flex-direction: column;
          gap: var(--size-1);
        }
      }

      sl-spinner {

        opacity: 0;
        font-size: 0;
        --track-width: 5px;
        --track-color: var(--colour-foreground);
        --indicator-color: var(--colour-accent);
        --speed: 2.5s;

        transition: opacity 500ms ease-in-out;

        &.htmx-request {
          font-size: var(--font-size-fluid-5);
          opacity: 1;
        }
      }

      .results {
        // TODO figure this out
        max-width: 80ch;

        &.htmx-request {
          opacity: 0;
        }

      }
    }
  }
</style>
