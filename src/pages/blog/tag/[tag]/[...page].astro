---
import BlogLayout from '@src/layouts/BlogLayout.astro';
import { PAGE_SIZE, getAllBlogEntries, getAllBlogTags, getAllBlogTagsWithCounts } from '@src/utils';
import type { GetStaticPaths, Page } from 'astro';
import mapValues from 'lodash/mapValues';
import drop from 'lodash/drop';
import { fade } from 'astro:transitions';

export const getStaticPaths = (async ({ paginate }) => {
  const collection = await getAllBlogEntries();
  const allTags = await getAllBlogTags();

  const pages = allTags.flatMap((tag) => {
    const posts = collection.filter((post) => {
      return post.data.tags ? post.data.tags.includes(tag) : false;
    });
    return paginate(posts, {
      params: { tag },
      pageSize: PAGE_SIZE,
    });
  });

  return pages;
}) satisfies GetStaticPaths;

const { tag: selectedTag } = Astro.params;

const allTags = await getAllBlogTagsWithCounts();
const sorted = Object.keys(allTags).sort((a : string, b : string) => {
  if (a === selectedTag) { return -1; }
  if (b === selectedTag) { return 1; }
  return a.localeCompare(b);
});

const total = Object.values(allTags).reduce((acc, count) => acc + count, 0);

const sizes = mapValues(allTags, (count) => {
  const proportion = count / total;
  return proportion * 2 + 1;
});

const remainder = drop(sorted, 1);

const page : Page<BlogEntry> = Astro.props.page;
---
<BlogLayout page={page}>
  <div class="tag-container card" slot="header">

    <a href={`/blog/tag/${selectedTag}`} class="tag"
      transition:name="selected-tag">
      <span class="tag-name selected"
        style={{ fontSize: `${sizes[selectedTag]}em` }}>
        {selectedTag}
        <span class="tag-count" >({allTags[selectedTag]})</span>
      </span>
    </a>

    { remainder.map((tag) => (
      <a href={`/blog/tag/${tag}`} class="tag">
        <span class="tag-name"
          style={{ fontSize: `${sizes[tag]}em` }}>
          {tag}
        </span>

        <span class="tag-count" >({allTags[tag]})</span>
      </a>
    ))}

  </div>
</BlogLayout>

<style lang="scss">
@import '@src/style/mixins.scss';

.tag-container {
  font-family: var(--font-body);

  display: flex;
  align-items: center;
  gap: var(--size-2);
  flex-wrap: wrap;
  width: 100%;
  padding: var(--size-fluid-2);

  .tag-name.selected {
    font-weight: bold;
    font-style: italic;
    &::before {
      content: '\2192\00a0';
    }
  }

  .tag-count {
    font-size: 0.75em;
  }

  a {
    @include hover-link($subtle: false);
  }
}

</style>
