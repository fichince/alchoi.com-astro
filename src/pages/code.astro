---
import About from '@src/components/About.astro';
import CoolBackground from '@src/components/CoolBackground.astro';
import CodeBrackets from '@src/components/icons/CodeBrackets.astro';
import IntroSection from '@src/components/IntroSection.astro';
import ProjectCarousel from '@src/components/ProjectCarousel.astro';
import NavbarLayout from '@src/layouts/NavbarLayout.astro';
import { getCollection, getEntry } from 'astro:content';

const code = await getCollection('code');

const intro = await getEntry('other', 'code-intro');
const title = intro.data.title;
const meta = { description: title };

---
<NavbarLayout title="Code" meta={meta}>
  <main class="container fade-in tw-container">
    <IntroSection intro={intro}>
      <CodeBrackets />
    </IntroSection>
    <section x-data="{ bgShift: -1, bgHover: 0}"
      x-bind:data-bg-shift="bgShift"
      x-bind:data-bg-hover="bgHover"
      x-on:mouseenter="bgHover = 1"
      x-on:mouseleave="bgHover = 0">
      { code.map(async (item, index) => {

        const { Content } = await item.render();

        return (
          <article x-on:mouseover={`bgShift = ${index}`} class="project">
            <div class="carousel">
              <ProjectCarousel project={item} />
            </div>

            <div class="words">
              <a href={item.data.url}>
                <h2>{item.data.title}</h2>
              </a>

              <div class="content tw-prose">
                <Content />
              </div>
            </div>
          </article>
        );
      })}
    </section>
    <CoolBackground />
  </main>
  <section>
    <About />
  </section>

</NavbarLayout>

<script>
  import createObserver from '../scripts/intersection';

  const items = document.getElementsByClassName('project');
  const observer = createObserver({ threshold: 0.25 });

  for (let i = 0; i < items.length; i++) {
    const elem = items.item(i);
    if (elem) observer.observe(elem);
  }
</script>

<style lang="scss">
  @import "../style/mixins.scss";

  .container {
    font-family: var(--font-body);

    margin-left: auto;
    margin-right: auto;
    padding: 0 var(--size-fluid-3);

    article {
      text-align: center;
      min-height: 100vh;
      border-top: 1px solid var(--colour-foreground);
      padding: var(--size-fluid-1) 0;

      display: grid;
      grid-template-areas: 
        "carousel"
        "words";
      justify-items: center;

      @include sm-up {
        grid-template-areas:
          "words carousel";
      }

      .carousel {
        grid-area: carousel;
        margin-bottom: var(--size-fluid-1);
        align-self: end;

        @include sm-up {
          align-self: center;
        }
      }

      .words {
        align-self: start;
        grid-area: words;

        @include sm-up {
          align-self: center;
        }

        h2 {
          font-family: var(--font-display);
          font-size: var(--font-size-fluid-1);
          margin: var(--size-fluid-2) 0;
        }

        .content {
          text-align: left;
        }

        a {
          @include hover-link;
          text-decoration: underline;
        }
      }

      &.show {
        opacity: 100%;
        transform: none;
        transition: all 500ms var(--ease-out-1);
      }

      &.hide {
        opacity: 0%;
        transition: all 500ms var(--ease-out-1);
      }

      &:nth-child(odd) {
        &.hide {
          transform: translateX(-50px);
        }
      }
      &:nth-child(even) {
        &.hide {
          transform: translateX(50px);
        }
      }
    }
  }

  sl-dialog#image-dialog {
    --width: 85vw;

    .image-container {
      display: flex;
      justify-content: center;
      max-height: 70vh;
    }
  }
</style>