---
import { Picture } from '@astrojs/image/components';
import About from '@src/components/About.astro';
import CoolBackground from '@src/components/CoolBackground.astro';
import MD from '@src/components/MD.astro';
import TagList from '@src/components/TagList.astro';
import NavbarLayout from '@src/layouts/NavbarLayout.astro';
import { enrichCapsuleEntry, getAllBlogEntries, mediumDate } from '@src/utils';
import type { GetStaticPaths } from 'astro';
import { getEntryBySlug } from 'astro:content';

export const getStaticPaths = (async () => {
  const entries = await getAllBlogEntries();
  const quickReviews = entries.filter((entry) => entry.collection === 'capsules');
  return quickReviews.map((review) => {
    return {
      params: { slug: review.slug }
    }
  });
}) satisfies GetStaticPaths;

const { slug = '' } = Astro.params;
const entry = await getEntryBySlug('capsules', slug);
const post = entry ? enrichCapsuleEntry(entry) : ({} as CapsuleEntry);

const title = post.data.title ?? 'Blog Post';
const author = post.data.author;
const date = mediumDate(post.data.start ?? new Date());
const end = post.data.end ? mediumDate(post.data.end) : null;

const tags = post.data.tags ?? [];
const image = post.data.image;

const { Content } = await post.render();

const meta = { 
  description: `A quick review of ${title}`,
  image,
};

---
<NavbarLayout title={title} meta={meta}>
  <article class="container tw-container fade-in">
    <header>
      <h1>
        <MD md={title} />
      </h1>
      { author &&
      <h2>
        {author}
      </h2>
      }
    </header>
    <section>
      <div class="dates">
        <time>{date}</time>
        {end && 
          <span> - <time>{end}</time></span> 
        }
      </div>

      <div class="tags">
        <TagList tags={tags} />
      </div>
      { image &&
        <div class="image">
          <Picture
            src={image}
            alt={title}
            widths={[140, 280]}
            aspectRatio="1:1"
            sizes="(min-width: 480px) 280px, 140px"
          />
        </div>
      }
      { post.data.rating &&
        <sl-rating value={post.data.rating} readonly precision="0.5" />
      }
    </section>
    <main class="tw-prose">
      <Content />
    </main>
    <CoolBackground />
    <!-- TODO put some indicator here that there's something below -->
  </article>
  <section>
    <About />
  </section>
</NavbarLayout>

<style lang="scss">
  @import "../../style/mixins.scss";

  article.container {
    margin: 0 auto;
    min-height: 100vh;

    font-family: var(--font-body);
    padding: var(--size-fluid-3);

    display: grid;
    align-content: start;

    grid-template-areas:
      "header"
      "subheader"
      "body";
    grid-template-columns: auto;
    gap: var(--size-fluid-3);

    header {
      grid-area: header;

      font-family: var(--font-display);
      text-align: center;

      h1 {
        font-size: var(--font-size-fluid-5);
        line-height: 3rem;
      }

      h2 {
        margin-top: var(--size-fluid-1);
        font-size: var(--font-size-fluid-3);
        font-weight: 300;
        &::before {
          content: 'by';
        }
      }
    }

    section {

      --text-alignment: center;
      --alignment: center;

      grid-area: subheader;
      font-size: var(--font-size-fluid-2);
      line-height: 2rem;

      display: flex;
      flex-direction: column;
      align-items: var(--alignment);

      text-align: var(--text-alignment);

      & > * {
        margin-bottom: var(--size-fluid-1);
      }

      time {
        font-size: var(--font-size-fluid-1);
      }

      sl-rating {
        margin: var(--size-fluid-1) 0;
        --symbol-size: var(--size-6);
      }
    }

    main {
      grid-area: body;
      font-size: var(--font-size-fluid-0);
      margin: 0 auto;
    }
  }
</style>