---
import MD from './MD.astro';

const { item } = Astro.props;
const { data: { title, description, image, url }, body, slug } = item;

---
<article id={slug} class="showcase-item rounded-md
  shadow-lg
  shadow-accent/30
  dark:shadow-accent-dark/10
  m-3 p-6 w-full sm:w-3/4
  justify-self-center self-center
  flex flex-col sm:flex-row 
  items-center 
  bg-tertiary dark:bg-tertiary-dark
  hover:animate-bump">
  <div class="mb-3 sm:mb-0 sm:mr-5">
    <a href={url} rel="noopener noreferrer" target="_blank">
      <img class="object-cover h-64 w-64"
        src={image} alt={title} />
    </a>
  </div>

  <div class="text-center w-4/5">
    <div class="text-xl sm:text-2xl lg:text-3xl mb-1 font-display text-accent dark:text-accent-dark">
      <a href={url} rel="noopener noreferrer" target="_blank">
        <MD md={title} />
      </a>
    </div>

    <div class="font-body text-accent dark:text-accent-dark">
      <MD md={description} />
    </div>

    { body &&
    <br />
    <div class="font-body text-accent dark:text-accent-dark text-left">
      <MD md={body} />
    </div>
    }
  </div>
</article>

<script>
  function handleScroll(entries : IntersectionObserverEntry[]) {
    entries.forEach((entry) => {
      let classList = entry.target.classList;
      if (entry.isIntersecting) {
        classList.add('show');
        classList.remove('hide');
      } else {
        classList.remove('show');
        classList.add('hide');
      }
    });
  }
  const items = document.getElementsByClassName('showcase-item');
  const observer = new IntersectionObserver(handleScroll, {
    threshold: 0.50
  });
  for (let i = 0; i < items.length; i++) {
    const elem = items.item(i);
    if (elem) {
      observer.observe(elem);
    }
  }
</script>

<style lang="scss">
  .showcase-item {
    &.hide {
      opacity: 0.5;
      transition: opacity 1s ease-in-out;
    }

    &.show {
      opacity: 1.0;
      transition: opacity 1s ease-in-out;
    }
  }
</style>
