---
import { renderMarkdown } from '@src/markdown'
import type { CollectionEntry } from 'astro:content'

interface Props {
  book: CollectionEntry<"quoteshelf">
}

const { book } = Astro.props;
---

<div class="embla">
    <div class="embla__viewport" x-data="carousel()" x-ref="carouselNode">
      <div class="embla__container">
        { book.data.quotes.map((quote : string) => (
          <div class="embla__slide tw-prose"
            set:html={renderMarkdown(quote)}>
          </div>
        ))}
      </div>
    </div>
</div>

<style lang="scss">
  @import "../../style/mixins.scss";

  section.book {
    border: 1px solid red;
    margin: var(--size-7) 0;
    min-height: 45vh;

    display: grid;
    padding: var(--size-fluid-2);
    gap: var(--size-5);

    grid-template-areas:
      "cover"
      "quotes";

    @include sm-up {
      grid-template-areas:
        "cover quotes"
    }

    img {
      place-self: center;
      grid-area: cover;
      max-height: 250px;
    }


  }
  .embla {
    //grid-area: quotes;
  }

  .embla__viewport {
    grid-area: quotes;
    overflow: hidden;
    border: orange solid 1px;
  }
  .embla__container {
    border: blue solid 1px;
    display: flex;
  }
  .embla__slide {
    border: green solid 1px;
    flex: 0 0 100%;
    min-width: 0;
    height: 100%;
  }
</style>
