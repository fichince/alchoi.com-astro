---
import { getCollection } from 'astro:content';
import random from 'lodash/random';
import BookCover from '@src/components/quoteshelf/BookCover.astro';
import QuoteFormatter from './QuoteFormatter.astro';

interface Props {
  simulateDelay?: boolean;
}

const NUM_QUOTES = 8;
const { simulateDelay } = Astro.props;

if (simulateDelay) {
  console.log('simulate delay');
  await new Promise((resolve) => setTimeout(resolve, 30000));
  console.log('done!');
}

console.time('randomizer');

const quoteshelf = await getCollection('quoteshelf');

console.timeLog('randomizer', 'loaded collection');


//console.timeLog('randomizer', 'done reading quotes');

console.log('total number of quotes', quoteshelf.length);

const indices = new Set<number>();
while (indices.size < NUM_QUOTES) {
  indices.add(random(0, quoteshelf.length - 1));
}

console.timeLog('randomizer', 'generated random numbers', indices);

const selectedQuotes = Array.from(indices).map((index) => quoteshelf[index]);

console.timeLog('randomizer', 'selected quotes');
console.timeEnd('randomizer');
---

{ selectedQuotes.map((quote) => {
    const link = `/quoteshelf/${quote.data.authorSlug}?book=${quote.data.titleSlug}#${quote.id}`;

    return (
    <div class="quote embla__slide"
      hx-trigger="load-more"
      hx-get="/quoteshelf/random"
      hx-swap="afterend">

      { quote.data.coverUrl && (
        <a href={link}>
          <BookCover
            cover={quote.data.coverUrl}
            title={quote.data.title}
            height="var(--size-px-12)"
          />
        </a>
      )}

      <div>
        <div class="quote-text tw-prose">
          <QuoteFormatter quote={quote} />
        </div>
        <div class="quote-title">
          <a href={link}>
            {quote.data.title}
          </a>
        </div>
        <div class="quote-author">
          {quote.data.author}
        </div>
      </div>
    </div>
    );
})}

<style lang="scss">
  @import "../../style/mixins.scss";

  .quote {
    padding: var(--size-3);
    display: flex;
    gap: var(--size-5);

    flex-direction: column;
    align-items: center;

    @include sm-up {
      flex-direction: row;
      align-items: start;
    }

    .quote-text {
      margin-bottom: var(--size-2);
    }

    .quote-title {
      font-style: italic;
      font-size: larger;
      font-family: var(--font-display);
      text-align: right;
    }

    .quote-author {
      text-align: right;
      font-weight: bold;
    }
  }

  .embla__slide {
    //border: green solid 1px;
    flex: 0 0 100%;
    min-width: 0;
    height: 100%;
    text-wrap: pretty;
  }

</style>
