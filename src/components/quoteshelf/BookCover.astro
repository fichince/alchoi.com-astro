---
import type { GetImageResult } from 'astro';
import { getImage } from 'astro:assets';

interface Props {
  cover: string;
  title: string;
  height?: string;
}

const { cover, title } = Astro.props;
const height = Astro.props.height ?? 'var(--size-px-14)';

function isRemote(cover : string) : boolean {
  return cover.startsWith('https:') || cover.startsWith('http:');
}

const format = 'webp';

let image : GetImageResult;
try {
  // fetches image from remote URL
  if (isRemote(cover)) {
    image = await getImage({
      src: cover,
      height: 320,
      width: 320,
      format
    });
  } else {
    // dynamic import of local image
    const images = import.meta.glob<{ default: ImageMetadata }>('../../images/quoteshelf/*');

    image = await getImage({
      src: images[`../../images/quoteshelf/${cover}`](),
      format
    });
  }
} catch (e) {
  console.log(`failed to load cover for ${title}`, e);
}

---
{ image &&
  <img style={{ '--height' : height }} src={image.src} alt={title} />
}

<style lang="scss">
  @import "../../style/mixins.scss";

  img {
    max-height: var(--height);

    @include sm-up {
      max-height: calc(var(--height) * 1.5);
    }
  }
</style>
